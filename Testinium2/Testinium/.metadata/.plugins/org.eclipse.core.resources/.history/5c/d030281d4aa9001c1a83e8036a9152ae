package com.example.demo.service;

import java.util.Comparator;
import java.util.List;
import java.util.function.Supplier;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.example.demo.dto.response.BookResponse;
import com.example.demo.dto.response.BookStoreResponse;
import com.example.demo.repo.BookStoreRepository;

@Service
public class BookStoreManager {

	private static final Supplier<IllegalArgumentException>
    bookNotFoundExceptionSupplier = 
    () -> new IllegalArgumentException("Cannot find the book");
	
	private BookStoreRepository bookStoreRepository;

	private ModelMapper modelMapper;

	public BookStoreManager(BookStoreRepository bookStoreRepository, ModelMapper modelMapper) {
		this.bookStoreRepository = bookStoreRepository;
		this.modelMapper = modelMapper;
	}
	
	public BookStoreResponse findById(Long id) {
		return modelMapper.map(
				bookStoreRepository.findById(id)
				.orElseThrow(bookNotFoundExceptionSupplier)
				, BookStoreResponse.class);
				
	}
	
	public List<BookResponse> findAll(){
		return bookRepository.findAll()
				.stream()
				.map(book -> modelMapper.map(book, BookResponse.class))
				.sorted(Comparator.comparing(BookResponse::getBookName))
				.toList();
				
	}
}
