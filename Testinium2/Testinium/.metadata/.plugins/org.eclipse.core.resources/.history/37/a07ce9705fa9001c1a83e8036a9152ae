package com.example.demo.entity;

import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "book")
@DynamicUpdate
@Data
@NoArgsConstructor
public class Book {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long id;
	private String bookName;
	private double price;

	
//	@OneToOne(cascade = CascadeType.ALL,fetch = FetchType.LAZY)
	@ManyToOne(cascade = CascadeType.DETACH, fetch = FetchType.EAGER)
	
	@JoinColumn(name = "category_id",nullable = false)
	@JsonIgnore
	private Category category;
	
	@OneToMany(cascade = CascadeType.DETACH, 
			fetch = FetchType.LAZY)
	private List<BookStore> bookStore;

	
}
